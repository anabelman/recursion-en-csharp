# Recursividad en C# - Contar D√≠gitos

Este proyecto muestra un ejemplo simple y claro de **recursividad** usando C#.  
El objetivo es contar cu√°ntos d√≠gitos tiene un n√∫mero entero positivo sin usar conversiones a texto ni m√©todos de cadenas. Solo recursividad pura.

---

## ¬øQu√© es la recursividad?

La recursividad es una t√©cnica en programaci√≥n donde una funci√≥n se llama a s√≠ misma para resolver problemas complejos descomponi√©ndolos en problemas m√°s peque√±os.

> "Divide y vencer√°s, pero con estilo."

Una funci√≥n recursiva siempre debe tener:
- Un **caso base** (condici√≥n que detiene las llamadas).
- Una **llamada recursiva** (cuando se llama a s√≠ misma con una versi√≥n m√°s simple del problema).

---

## üß™ Ejemplo del programa

Si el usuario escribe: `1234`  
La funci√≥n har√° esto:

---

## C√≥digo

```csharp
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Escribe un n√∫mero positivo:");
        string entrada = Console.ReadLine();

        if (int.TryParse(entrada, out int numero) && numero >= 0)
        {
            int digitos = ContarDigitos(numero);
            Console.WriteLine($"El n√∫mero {numero} tiene {digitos} d√≠gito(s).");
        }
        else
        {
            Console.WriteLine("Por favor, ingresa un n√∫mero positivo v√°lido.");
        }
    }

    static int ContarDigitos(int numero)
    {
        if (numero < 10)
            return 1;
        else
            return 1 + ContarDigitos(numero / 10);
    }
}
